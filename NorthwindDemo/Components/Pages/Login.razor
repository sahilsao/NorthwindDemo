@page "/"
@page "/login"
@layout EmptyLayout

@using NorthwindDemo.Components.Layout;
@using System.ComponentModel.DataAnnotations

<MudGrid JustifyContent="JustifyContent.Center" AlignItems="AlignItems.Center">    
    <MudItem xs="12" sm="6" Class="d-none d-sm-flex" >
        <MudImage ObjectFit="ObjectFit.Contain" Height="200" Width="400" Src="@($"undraw_secure-login.svg")" Alt="login"
            Class="rounded-lg mt-20" />
    </MudItem>
    <MudSpacer />
    <MudItem xs="12" sm="6">
        <MudCardHeader>
            <CardHeaderContent>
                <MudText Typo="Typo.h5">Login</MudText>
            </CardHeaderContent>
        </MudCardHeader>
        <MudCard Outlined="true">
            <EditForm Model="@model" OnValidSubmit="OnValidSubmit">
                <MudCardContent>
                    <DataAnnotationsValidator />
                    <MudTextField Label="User ID" HelperText="Enter your userid" Class="mt-3" @bind-Value="model.Userid"
                        For="@(() => model.Userid)" autocomplete="off" />
                    <MudTextField Label="Password" HelperText="Enter your password" Class="mt-3"
                        @bind-Value="model.Password" For="@(() => model.Password)" InputType="@PasswordInput"
                        Adornment="Adornment.End" AdornmentIcon="@PasswordInputIcon" OnAdornmentClick="ToggleVisibility"
                        AdornmentAriaLabel="Show Password" />
                    <MudSpacer />
                </MudCardContent>
                <MudCardActions>
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary"
                        Class="ml-auto mt-4">Login</MudButton>
                </MudCardActions>
            </EditForm>
        </MudCard>
    </MudItem>
</MudGrid>

@code {
    RegisterAccountForm model = new RegisterAccountForm();
    public class RegisterAccountForm
    {

        [Required]
        public string? Userid { get; set; }

        [Required]
        [StringLength(30, ErrorMessage = "Password must be at least 8 characters long.", MinimumLength = 8)]
        public string? Password { get; set; }

    }

    private void OnValidSubmit(EditContext context)
    {
        StateHasChanged();
    }
    bool isShow;
    InputType PasswordInput = InputType.Password;
    string PasswordInputIcon = Icons.Material.Filled.VisibilityOff;

    void ToggleVisibility()
    {
        @if (isShow)
        {
            isShow = false;
            PasswordInputIcon = Icons.Material.Filled.VisibilityOff;
            PasswordInput = InputType.Password;
        }
        else
        {
            isShow = true;
            PasswordInputIcon = Icons.Material.Filled.Visibility;
            PasswordInput = InputType.Text;
        }
    }

    public string Image { get; set; } = "tractor.jpg";


    public ObjectFit ImageFit { get; set; } = ObjectFit.Cover;
}
