@page "/customer/customer-dashboard"

@using NorthwindDemo.Components.Layout.Customer;
@using System.ComponentModel.DataAnnotations;
@using Microsoft.EntityFrameworkCore;
@using NorthwindDemo.Context;
@using NorthwindDemo.Entities;
@using NorthwindDemo.Sessions;

@inject CustomerSessions CustomerSessions

@layout CustomerLayout

@inject NavigationManager NavigationManager
@inject DbContextNorthwind DbContext

<PageTitle>Customer Dashboard</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true">Dashboard</MudText>

<MudGrid>
    <MudItem>
        <MudCard Outlined="true">
            <MudCardContent>
                <MudText>
                    <MudIcon Icon="@Icons.Material.Filled.LocalShipping"></MudIcon> Total Orders
                </MudText>
                <MudText Typo="Typo.h6"><strong>@TotalOrders</strong></MudText>
            </MudCardContent>
            <MudCardActions>
                <MudButton Variant="Variant.Text" Color="Color.Primary" OnClick="ViewAllOrders">View All Orders</MudButton>
            </MudCardActions>
        </MudCard>
    </MudItem>
    <MudSpacer />
</MudGrid>

@code {

    public string? UserName { get; set; }
    private bool _hasLoaded = false;
    public string? TotalOrders { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && !_hasLoaded)
        {
            await LoadStateAsync();
            _hasLoaded = true;
            StateHasChanged(); // Trigger UI re-render
        }
    }

    private async Task LoadStateAsync()
    {
        UserName = await CustomerSessions.GetCompanyName();

        if (UserName == null)
        {
            NavigationManager.NavigateTo("/customer/customer-login");
        }
         
        GetTotalOrders();
    }

    public async void GetTotalOrders()
    {
        String CustomerID = await CustomerSessions.GetCustomerID();

        var totalOrders = await DbContext.Orders
        .Where(o => o.CustomerId == CustomerID)
        .CountAsync();

        // Convert the count to a string
        TotalOrders = totalOrders.ToString();

        StateHasChanged();
    }

    public async Task ViewAllOrders()
    {
        NavigationManager.NavigateTo("/customer/customer-orders");
        await Task.CompletedTask;
    }
}
